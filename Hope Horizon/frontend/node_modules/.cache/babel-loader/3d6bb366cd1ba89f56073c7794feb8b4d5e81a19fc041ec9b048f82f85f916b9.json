{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thava\\\\OneDrive\\\\Desktop\\\\Currently working\\\\Design Project\\\\Hope Horizon\\\\frontend\\\\src\\\\Pages\\\\ParentDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../Styles/ParentDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParentDashboard = () => {\n  _s();\n  const [children, setChildren] = useState([]);\n  useEffect(() => {\n    fetch('/api/parent/children', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        parentId: 'PARENT_ID_HERE'\n      }) // Replace with actual parent ID\n    }).then(res => res.json()).then(data => setChildren(data)).catch(err => console.error(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"parent-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Parent Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"children-list\",\n      children: children.map(child => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"child-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: child.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Progress: \", child.domains[0].progressPercentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, child.studentId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(ParentDashboard, \"GmcbRncwHbtRisvULaePKXRSrD0=\");\n_c = ParentDashboard;\nexport default ParentDashboard;\nvar _c;\n$RefreshReg$(_c, \"ParentDashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ParentDashboard","_s","children","setChildren","fetch","method","headers","body","JSON","stringify","parentId","then","res","json","data","catch","err","console","error","className","fileName","_jsxFileName","lineNumber","columnNumber","map","child","name","domains","progressPercentage","studentId","_c","$RefreshReg$"],"sources":["C:/Users/thava/OneDrive/Desktop/Currently working/Design Project/Hope Horizon/frontend/src/Pages/ParentDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../Styles/ParentDashboard.css';\r\n\r\nconst ParentDashboard = () => {\r\n  const [children, setChildren] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/api/parent/children', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ parentId: 'PARENT_ID_HERE' }), // Replace with actual parent ID\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => setChildren(data))\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"parent-dashboard\">\r\n      <h1>Parent Dashboard</h1>\r\n      <div className=\"children-list\">\r\n        {children.map((child) => (\r\n          <div key={child.studentId} className=\"child-card\">\r\n            <h2>{child.name}</h2>\r\n            <p>Progress: {child.domains[0].progressPercentage}%</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ParentDashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,sBAAsB,EAAE;MAC5BC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,QAAQ,EAAE;MAAiB,CAAC,CAAC,CAAE;IACxD,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKX,WAAW,CAACW,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA;IAAKoB,SAAS,EAAC,kBAAkB;IAAAjB,QAAA,gBAC/BH,OAAA;MAAAG,QAAA,EAAI;IAAgB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBxB,OAAA;MAAKoB,SAAS,EAAC,eAAe;MAAAjB,QAAA,EAC3BA,QAAQ,CAACsB,GAAG,CAAEC,KAAK,iBAClB1B,OAAA;QAA2BoB,SAAS,EAAC,YAAY;QAAAjB,QAAA,gBAC/CH,OAAA;UAAAG,QAAA,EAAKuB,KAAK,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBxB,OAAA;UAAAG,QAAA,GAAG,YAAU,EAACuB,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,kBAAkB,EAAC,GAAC;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GAF/CE,KAAK,CAACI,SAAS;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGpB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CA3BID,eAAe;AAAA8B,EAAA,GAAf9B,eAAe;AA6BrB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}